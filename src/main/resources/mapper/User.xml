<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaomi.dao.IUserDao">

    <resultMap type="com.xiaomi.bean.UserBean" id="UserResult">
        <!--主键用id，其他的用result-->
        <!--columu表示数据库里边的(结果集的列表  如果有别名就有问题了，详细参考AppStore.xml)  property表示bean里边与数据库对应的-->
        <id column="UserId" jdbcType="INTEGER" property="userId"/>
        <result column="UserName" jdbcType="VARCHAR" property="userName"/>

    </resultMap>

    <!--这里的id  是所有的id都不能重复，唯一的，访问的时候需要加上mapper中的名称，这样保证单个文件里的唯一性就可以了-->
    <select id="selectAll" parameterType="long" resultMap="UserResult">
    SELECT * FROM user
  </select>


    <!--分页查询  拼接sql语句   这里的parameterType  可以传递进来String等基本数据类型、自定义bean、List、数组、map-->
    <!--这里还支持java的运算符当然也有自己的运算符号  比如  and、or、mob、in、not in-->
    <!--取值的话  list就写list  数组就写array  map就写_parameter   bean和String下边有-->
    <!--具体使用规则查看main/webapp/static中的图片-->
    <!--&#45;&#45;         这里写怎么取值  如果是传递进来的Bean类型  就直接写属性名  使用的话就直接使用#{属性名}-->
    <select id="selectByPage" parameterType="com.xiaomi.utils.PageBean" resultMap="UserResult">
        SELECT * FROM user GROUP BY  user.UserId limit #{startIndex} , #{pageSize}
    </select>

    <!--&#45;&#45;         这里写怎么取值  如果是传递进来的String类型  就直接写_parameter  使用的话就直接使用#{取出来的值}-->
    <select id="selectByName" parameterType="String" resultMap="UserResult">
        SELECT * FROM user WHERE UserName LIKE #{_parameter}
    </select>


    <delete id="deleteById" parameterType="int">
        DELETE FROM user WHERE UserId = #{_parameter}
    </delete>


    <!--这里用到List  拼接sql的时候用到了foreach 标签  ，
    如果是list或者数组   collection属性就是list  如果是map collection属性就是array
    如果是list或者数组   index属性就是i  i就是下边      如果是map index属性就是i  这里的i表示的是key
    如果是list或者数组   item属性就是item       如果是map index属性就是item    这里有个问题如果item是一个对象   要用item.属性名才能引用出来
     -->
    <!--在foreach标签里边，我们可以通过separator属性来在每两个之间添加逗号-->
    <delete id="deleteByNameList" parameterType="java.util.List">
        DELETE FROM user WHERE UserName IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <select id="selectByNameList" parameterType="java.util.List" resultMap="UserResult">
        SELECT * FROM user WHERE UserName IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>


    <update id="updateById" parameterType="com.xiaomi.bean.UserBean">
        UPDATE  user set UserName =#{userName} WHERE UserId=#{userId}
    </update>

</mapper>
